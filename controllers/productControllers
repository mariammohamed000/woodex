const Product = require("../models/productModel"); 

exports.addProductController = async (req, res) => {
  try {
    req.body.sale = req.body.sale == "on" ? true : false;
    req.body.productPicture = `http://localhost:3000/${req.file.filename}`;
    await Product.create(req.body);
    return res.redirect("/viewprod");
  } catch (error) {
    console.log(error);
    return res.status(500).json("INTERNAL SERVER ERROR");
  }
};

exports.deleteProductController = async (req, res) => {
  try {
    await Product.findByIdAndDelete(req.params.id);
    return res.redirect("/viewprod");
  } catch (error) {
    return res.status(500).json("INTERNAL SERVER ERROR");
  }
};

exports.updateProductController = async (req, res) => {
  try {
    console.log(req.body);
    await Product.findByIdAndUpdate(req.body.productId, {
      name: req.body.name,
      price: +req.body.price,
      originalPrice: +req.body.originalPrice,
      discount: +req.body.discount,
      category: req.body.category,
      sale: req.body.sale ? true : false,
    });
    return res.redirect("/viewprod");
  } catch (error) {
    console.log(error);
    return res.status(500).json("INTERNAL SERVER ERROR");
  }
};

// Add a new product
exports.addProduct = async (req, res) => {
  try {
    const { name, price } = req.body;
    const productPicture = req.file ? req.file.filename : null; // Handle image file

    // Create new product
    const newProduct = new Product({
      name,
      price,
      productPicture,
    });

    // Save product to database
    await newProduct.save();
    res
      .status(201)
      .json({ message: "Product added successfully", product: newProduct });
  } catch (err) {
    console.error("Error adding product:", err);
    res.status(500).json({ error: err.message });
  }
};

// Edit an existing product
exports.editProduct = async (req, res) => {
  try {
    const { id } = req.params;
    const { name, price } = req.body;
    const productPicture = req.file ? req.file.filename : null; // Handle image file

    // Find and update the product
    const updatedProduct = await Product.findByIdAndUpdate(
      id,
      {
        name,
        price,
        productPicture,
      },
      { new: true }
    );

    if (!updatedProduct) {
      return res.status(404).json({ error: "Product not found" });
    }

    res.status(200).json({
      message: "Product updated successfully",
      product: updatedProduct,
    });
  } catch (err) {
    console.error("Error updating product:", err);
    res.status(500).json({ error: err.message });
  }
};

// Delete a product
exports.deleteProduct = async (req, res) => {
  try {
    const { id } = req.params;
    const deletedProduct = await Product.findByIdAndDelete(id);

    if (!deletedProduct) {
      return res.status(404).json({ error: "Product not found" });
    }

    res.status(200).json({ message: "Product deleted successfully" });
  } catch (err) {
    console.error("Error deleting product:", err);
    res.status(500).json({ error: err.message });
  }
};

// List all products
exports.getAllProducts = async (req, res) => {
  try {
    const products = await Product.find();
    res.status(200).json({ products });
  } catch (err) {
    console.error("Error fetching products:", err);
    res.status(500).json({ error: err.message });
  }
};
